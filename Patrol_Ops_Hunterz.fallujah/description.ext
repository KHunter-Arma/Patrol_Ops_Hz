#include "mps\dialog\mps_dialog.hpp"
#include "HZ\dialogs\defines.hpp"
#include "HZ\dialogs\fort\dialog.hpp"
#include "HZ\dialogs\admin\dialog.hpp"
#include "R3F_LOG\desc_include.h"

loadScreen = "mps\media\po2.paa";

Respawn		= 3;
RespawnDelay	= 380;
respawnDialog	= 0;
showGPS		= 0;
showCompass	= 1;
showWatch	= 1;
aiKills		= 0;
DisabledAI	= 1;
debriefing	= 1;
briefing	= 0;

// 0 = Global, 1 = Side, 2 = Command, 3 = Group, 4 = Vehicle, 5 = Direct, 6 = System
// {channelid, disablechat, disablevoice}
disableChannels[] = {{0,false,true},{1,true,true},{2,true,true},{3,true,true},{4,true,true},{5,true,true},{6,true,true}};

enableItemsDropping = 0;

forceRotorLibSimulation = 1;

class cfgFunctions
{
  class Hz {
      
      class Hz_pops {
				
				class setVehicleInit {
					
					file = "Hz\Hz_funcs\Hz_fnc_setVehicleInit.sqf";		
					
				};           
        
      };
    
  };
  
};

class Extended_InitPost_EventHandlers
{		

	class LandVehicle {
	
		class RemoveRadios {
		
			init = "if (local (_this select 0)) then {if ((isnil 'Hz_pers_network_vehicles') || {!((_this select 0) in Hz_pers_network_vehicles)}) then {_items = itemCargo (_this select 0); clearItemCargoGlobal (_this select 0); _items = _items - ['ACRE_PRC343']; {(_this select 0) addItemCargoGlobal [_x,1];} foreach _items;};};";
		
		};
		
		class DeleteAttached {
		
			init = "if (local (_this select 0)) then {(_this select 0) addEventHandler ['Deleted',{{deleteVehicle _x} foreach (attachedObjects (_this select 0));}];};";
		
		};
	
	};
	
	class Air {
	
		class RemoveRadios {
		
			init = "if (local (_this select 0)) then {if ((isnil 'Hz_pers_network_vehicles') || {!((_this select 0) in Hz_pers_network_vehicles)}) then {_items = itemCargo (_this select 0); clearItemCargoGlobal (_this select 0); _items = _items - ['ACRE_PRC343']; {(_this select 0) addItemCargoGlobal [_x,1];} foreach _items;};};";
		
		};
		
		class DeleteAttached {
		
			init = "if (local (_this select 0)) then {(_this select 0) addEventHandler ['Deleted',{{deleteVehicle _x} foreach (attachedObjects (_this select 0));}];};";
		
		};
	
	};
	
	class Ship {
	
		class RemoveRadios {
		
			init = "if (local (_this select 0)) then {if ((isnil 'Hz_pers_network_vehicles') || {!((_this select 0) in Hz_pers_network_vehicles)}) then {_items = itemCargo (_this select 0); clearItemCargoGlobal (_this select 0); _items = _items - ['ACRE_PRC343']; {(_this select 0) addItemCargoGlobal [_x,1];} foreach _items;};};";
		
		};
		
		class DeleteAttached {
		
			init = "if (local (_this select 0)) then {(_this select 0) addEventHandler ['Deleted',{{deleteVehicle _x} foreach (attachedObjects (_this select 0));}];};";
		
		};
	
	};

	class CAManBase {

		class RemoveItemsAI {
			
			init = "if ((!((_this select 0) in playableunits)) && (local (_this select 0))) then {(_this select 0) unlinkItem 'ItemMap'; (_this select 0) unlinkItem 'ItemGPS'; (_this select 0) unlinkItem 'ItemCompass'; (_this select 0) unlinkItem 'ItemWatch'; (_this select 0) unlinkItem 'CUP_NVG_PVS7'; (_this select 0) unlinkItem 'CUP_NVG_PVS7_Hide'; (_this select 0) removeItem 'ACRE_PRC343'; (_this select 0) unlinkItem 'ItemRadio'; (_this select 0) removeItem 'ItemRadio';};";
			
		};
		
		class Barotrauma {
			init = "if (local (_this select 0)) then {(_this select 0) addEventHandler ['Killed', {(_this select 0) spawn {sleep 5; if (isObjectHidden _this) then {deleteVehicle _this;};};}];};";
		};
		
	};
	
	class SoldierWB	{
	
		class doubleAiAmmo {
		
			init = "if ((!((_this select 0) in playableunits)) && (local (_this select 0))) then {_magArray = primaryWeaponMagazine (_this select 0); if ((count _magArray) > 0) then {(_this select 0) addMagazines [_magArray select 0,20];};};";
		
		};
	
	};
	class SoldierGB {
	
		class doubleAiAmmo {
		
			init = "if ((!((_this select 0) in playableunits)) && (local (_this select 0))) then {_magArray = primaryWeaponMagazine (_this select 0); if ((count _magArray) > 0) then {(_this select 0) addMagazines [_magArray select 0,20];};};";
		
		};
	
	};	
	class SoldierEB {
	
		class doubleAiAmmo {
		
			init = "if ((!((_this select 0) in playableunits)) && (local (_this select 0))) then {_magArray = primaryWeaponMagazine (_this select 0); if ((count _magArray) > 0) then {(_this select 0) addMagazines [_magArray select 0,20];};};";
		
		};
	
	};
	
	class CUP_Creatures_Military_TK_Soldier_Base {
	
		class addTakiArmor {
		
			init = "if ((!((_this select 0) in playableunits)) && (local (_this select 0))) then {_vestItems = vestItems (_this select 0); (_this select 0) addvest 'rhs_6b5_rifleman_khaki'; {(vestContainer (_this select 0)) addItemCargoGlobal [_x,1];} foreach _vestItems;};";
		
		};
	
	};
	
	class LOP_TKA_Infantry_Rifleman {
	
		class addTakiArmor {
		
			init = "if ((!((_this select 0) in playableunits)) && (local (_this select 0))) then {_vestItems = vestItems (_this select 0); (_this select 0) addvest 'rhs_6b5_rifleman_khaki'; {(vestContainer (_this select 0)) addItemCargoGlobal [_x,1];} foreach _vestItems;};";
		
		};
		
		class correctTakiUniform {
		
			init = "if ((!((_this select 0) in playableunits)) && (local (_this select 0))) then {_uniformItems = uniformItems (_this select 0); (_this select 0) addUniform 'CUP_U_O_TK_Green'; {(uniformContainer (_this select 0)) addItemCargoGlobal [_x,1];} foreach _uniformItems; removeHeadgear (_this select 0); (_this select 0) addHeadgear 'CUP_H_TK_Helmet';};";
		
		};
	
	};
	
	class LOP_TKA_Infantry_Crewman {
	
		class addTakiArmor {
		
			init = "if ((!((_this select 0) in playableunits)) && (local (_this select 0))) then {_vestItems = vestItems (_this select 0); (_this select 0) addvest 'rhs_6b5_rifleman_khaki'; {(vestContainer (_this select 0)) addItemCargoGlobal [_x,1];} foreach _vestItems;};";
		
		};
		
		class correctTakiUniform {
		
			init = "if ((!((_this select 0) in playableunits)) && (local (_this select 0))) then {_uniformItems = uniformItems (_this select 0); (_this select 0) addUniform 'CUP_U_O_TK_Green'; {(uniformContainer (_this select 0)) addItemCargoGlobal [_x,1];} foreach _uniformItems; removeHeadgear (_this select 0); (_this select 0) addHeadgear 'CUP_H_TK_TankerHelmet';};";
		
		};
	
	};
	
};

class RscTitles {
	#include "mps\dialog\mps_titles.sqf"
};

class Params {
	#include "mps\dialog\mps_params.sqf"
};

class CfgSounds {
	#include "mps\dialog\mps_sounds.sqf"
};

class CfgDebriefing
{  
	class End1
	{
		title = "Mission Completed";
		subtitle = "";
		description = "Wow you actually survived through all of that? Well done!";
		pictureBackground = "";
		picture = "";
		pictureColor[] = {0.0,0.3,0.6,1};
	};
	
	class publicRestriction
	{
		title = "Unauthorised Access";
		subtitle = "";
		description = "This is a semi-private server. You must be accompanied by a trained B.A.D. PMC member to play on this server.";
		pictureBackground = "";
		picture = "";
		pictureColor[] = {0.6,0.1,0.2,1};
	};
	
	class playerLimit
	{
		title = "Public Player Limit";
		subtitle = "";
		description = "This server restricts the number of players not part of B.A.D. PMC playing on the server. You must wait until another such player leaves, or more B.A.D. PMC members join, to play.";
		pictureBackground = "";
		picture = "";
		pictureColor[] = {0.6,0.1,0.2,1};
	};
	
	class wrongSlot
	{
		title = "Unauthorised Slot";
		subtitle = "";
		description = "You are not authorised to use this slot. Please pick another slot to join.";
		pictureBackground = "";
		picture = "";
		pictureColor[] = {0.6,0.1,0.2,1};
	};
	
	class Escaped
	{
		title = "Warning";
		subtitle = "";
		description = "Desynchronised. Please reconnect.";
		pictureBackground = "";
		picture = "";
		pictureColor[] = {0.6,0.1,0.2,1};
	};
	
	class addon
	{
		title = "Disallowed Addon";
		subtitle = "";
		description = "You were removed from the game because you are running a mod which is not allowed on this server.";
		pictureBackground = "";
		picture = "";
		pictureColor[] = {0.6,0.1,0.2,1};
	};	
	
	class JointOpManpower
	{
		title = "Not enough members";
		subtitle = "";
		description = "You have exceeded the time limit allowed to gather the minimum number of your unit's members required on the server. Joint operations are not available with less than 8 of your unit's members online.";
		pictureBackground = "";
		picture = "";
		pictureColor[] = {0.6,0.1,0.2,1};
	};	
			
	class End2
	{
		title = "Kicked";
		subtitle = "";
		description = "You were kicked from the server.";
		pictureBackground = "";
		picture = "";
		pictureColor[] = {0.6,0.1,0.2,1};
	};
	
		class End3
	{
		title = "Banned";
		subtitle = "";
		description = "You were banned from the server.";
		pictureBackground = "";
		picture = "";
		pictureColor[] = {0.6,0.1,0.2,1};
	};
};

class CfgWorlds {

	class CAWorld;
	class Utes : CAWorld {};
	class fallujah : Utes {
		
		ACE_TempDay[]   = {10, 10, 12, 16, 21, 26, 29, 28, 25, 20, 15, 11};
		ACE_TempNight[] = {4, 4, 6, 8, 13, 17, 20, 20, 16, 12, 8, 6};
		ACE_Humidity[]  = {78, 77, 78, 74, 71, 60, 59, 61, 65, 72, 79, 80};
		ACE_WindSpeedMax[]  = {{8.8, 5.5}, {8.8, 5}, {8.6, 4.8}, {7.6, 3.4}, {7.0, 3.0}, {7.1, 3.0}, {7.5, 3.1}, {8.0, 3.2}, {7.6, 3.5}, {7.8, 4.6}, {7.9, 5.0}, {8.2, 5.5}};
		ACE_WindSpeedMean[] = {4.8, 4.9, 4.6, 4.1, 3.5, 3.5, 4.3, 4.4, 4.1, 4.5, 4.5, 5.0};
		ACE_WindSpeedMin[]  = {{0.2, 5.0}, {0.1, 5.0}, {0.2, 4.3}, {0.0, 3.0}, {0.0, 2.1}, {0.0, 2.0}, {0.1, 3.1}, {0.3, 3.1}, {0.0, 3.6}, {0.0, 4.2}, {0.1, 5.0}, {0.2, 5.5}};
		ACE_WindDirectionProbabilities[]  = {{0.06, 0.32, 0.05, 0.04, 0.15, 0.06, 0.02, 0.02}, // January
																				 {0.08, 0.32, 0.04, 0.04, 0.18, 0.06, 0.02, 0.02}, // February
																				 {0.09, 0.30, 0.04, 0.04, 0.20, 0.06, 0.02, 0.03}, // March
																				 {0.10, 0.25, 0.03, 0.04, 0.22, 0.06, 0.02, 0.04}, // April
																				 {0.18, 0.25, 0.03, 0.04, 0.18, 0.04, 0.01, 0.05}, // May
																				 {0.25, 0.25, 0.03, 0.03, 0.15, 0.03, 0.00, 0.08}, // June
																				 {0.32, 0.30, 0.02, 0.02, 0.10, 0.01, 0.00, 0.09}, // July
																				 {0.28, 0.35, 0.02, 0.01, 0.08, 0.01, 0.00, 0.08}, // August
																				 {0.20, 0.37, 0.03, 0.01, 0.11, 0.01, 0.01, 0.05}, // September
																				 {0.10, 0.39, 0.04, 0.02, 0.15, 0.02, 0.01, 0.03}, // October
																				 {0.08, 0.38, 0.06, 0.04, 0.19, 0.03, 0.02, 0.02}, // November
																				 {0.06, 0.37, 0.05, 0.03, 0.18, 0.04, 0.02, 0.02}};// December
																				 // N , NE  , E   , SE  , S   , SW  , W   , NW
	};

};
